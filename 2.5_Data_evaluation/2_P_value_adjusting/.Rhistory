tstat <- read.csv(file="/home/neuronelab/Desktop/Last Version Tagliaferri/Step2.5. Data Preparation/T-test.csv", header=TRUE,
sep=",")
demo()
tstat <- read.csv(file="/home/cano/Escritorio/MachineLearningGuide/2.5_Data_evaluation/1_T_test/output/T-test.csv",
header=TRUE,
sep=",")
tstat <- read.csv(file="/home/cano/Escritorio/MachineLearningGuide/2.5_Data_evaluation/1_T_test/output/T-test.csv",
header=TRUE,
sep=",")
print(head(tstat))
print(nrow(tstat))
print(tstat[['p.value']])
tstat <- read.csv(file="/home/cano/Escritorio/MachineLearningGuide/2.5_Data_evaluation/1_T_test/output/T-test.csv",
header=TRUE,
sep=",")
print(head(tstat))
print(nrow(tstat))
print(row.names(tstat))
print(tstat[['p.value']])
tstat['p_adjust'] <- p.adjust(tstat[['p.value']], method = "bonferroni", n = nrow(tstat))
write.csv(tstat, file="/home/cano/Escritorio/MachineLearningGuide/2.5_Data_evaluation/2_P_value_adjusting/output/T-test (p_adjust).csv",
row.names = FALSE)
write.csv(tstat, file=PATH_OUTPUT + constant + feature + '_' + constant1 + '.csv',
row.names = FALSE)
features <- list('area', 'meancurv', 'thickness', 'volume')
View(features)
View(tstat)
View(tstat)
cls
cleart
clear
readCsvs()
readCsvs()
for (feature in features) {
tstat <- read.csv(file= PATH_DATASETS + constant + feature + ".csv",
header=TRUE,
sep=",")
print(head(tstat))
print(nrow(tstat))
print(row.names(tstat))
print(tstat[['p.value']])
tstat['p_adjust'] <- p.adjust(tstat[['p.value']], method = "bonferroni", n = nrow(tstat))
write.csv(tstat, file=PATH_OUTPUT + constant + feature + '_' + constant1 + '.csv',
row.names = FALSE)
}
PATH_DATASETS <- "/home/cano/Escritorio/tesis2.0/2.5_Data_evaluation/1_T_test/output/"
PATH_DATASETS <- "/home/cano/Escritorio/tesis2.0/2.5_Data_evaluation/1_T_test/output/"
PATH_OUTPUT <- "/home/cano/Escritorio/tesis2.0/2.5_Data_evaluation/2_P_value_adjusting/output/"
datasets <- list()
constant <- 'T-test_'
constant1 <- '(p_adjust)'
features <- list('area', 'meancurv', 'thickness', 'volume')
for (feature in features) {
tstat <- read.csv(file= PATH_DATASETS + constant + feature + ".csv",
header=TRUE,
sep=",")
print(head(tstat))
print(nrow(tstat))
print(row.names(tstat))
print(tstat[['p.value']])
tstat['p_adjust'] <- p.adjust(tstat[['p.value']], method = "bonferroni", n = nrow(tstat))
write.csv(tstat, file=PATH_OUTPUT + constant + feature + '_' + constant1 + '.csv',
row.names = FALSE)
}
PATH_DATASETS <- "/home/cano/Escritorio/tesis2.0/2.5_Data_evaluation/1_T_test/output/"
PATH_OUTPUT <- "/home/cano/Escritorio/tesis2.0/2.5_Data_evaluation/2_P_value_adjusting/output/"
datasets <- list()
constant <- 'T-test_'
constant1 <- '_(p_adjust)'
features <- list('area', 'meancurv', 'thickness', 'volume')
for (feature in features) {
path = paste(
PATH_DATASETS, constant, feature, '.csv',sep = ''
)
tstat <- read.csv(file = path,
header=TRUE,
sep=",")
print(head(tstat))
print(nrow(tstat))
print(row.names(tstat))
print(tstat[['p.value']])
tstat['p_adjust'] <- p.adjust(tstat[['p.value']], method = "bonferroni", n = nrow(tstat))
pathO = paste(
PATH_DATASETS, constant, feature, constant1, '.csv',sep = ''
)
write.csv(tstat, file= pathO,
row.names = FALSE)
}
View(tstat)
PATH_DATASETS <- "/home/cano/Escritorio/tesis2.0/2.5_Data_evaluation/1_T_test/output/"
PATH_OUTPUT <- "/home/cano/Escritorio/tesis2.0/2.5_Data_evaluation/2_P_value_adjusting/output/"
datasets <- list()
constant <- 'T-test_'
constant1 <- '_(p_adjust)'
features <- list('area', 'meancurv', 'thickness', 'volume')
for (feature in features) {
path = paste(
PATH_DATASETS, constant, feature, '.csv',sep = ''
)
tstat <- read.csv(file = path,
header=TRUE,
sep=",")
print(head(tstat))
print(nrow(tstat))
print(row.names(tstat))
print(tstat[['p.value']])
tstat['p_adjust'] <- p.adjust(tstat[['p.value']], method = "bonferroni", n = nrow(tstat))
pathO = paste(
PATH_OUTPUT, constant, feature, constant1, '.csv',sep = ''
)
write.csv(tstat, file= pathO,
row.names = FALSE)
}
PATH_DATASETS <- "/home/cano/Escritorio/tesis2.0/2.5_Data_evaluation/1_T_test/output/"
PATH_OUTPUT <- "/home/cano/Escritorio/tesis2.0/2.5_Data_evaluation/2_P_value_adjusting/output/"
datasets <- list()
constant <- 'T-test_'
constant1 <- '_(p_adjust)'
features <- list('area', 'meancurv', 'thickness', 'volume')
for (feature in features) {
path = paste(
PATH_DATASETS, constant, feature, '.csv',sep = ''
)
tstat <- read.csv(file = path,
header=TRUE,
sep=",")
print(head(tstat))
print(nrow(tstat))
print(row.names(tstat))
print(tstat[['p.value']])
tstat['p_adjust'] <- p.adjust(tstat[['p.value']], method = "bonferroni", n = nrow(tstat))
pathO = paste(
PATH_OUTPUT, constant, feature, constant1, '.csv',sep = ''
)
write.csv(tstat, file= pathO,
row.names = FALSE)
}
PATH_DATASETS <- "/home/cano/Escritorio/tesis2.0/2.5_Data_evaluation/1_T_test/output/"
PATH_OUTPUT <- "/home/cano/Escritorio/tesis2.0/2.5_Data_evaluation/2_P_value_adjusting/output/"
datasets <- list()
constant <- 'T-test_'
constant1 <- '_(p_adjust)'
features <- list('area', 'meancurv', 'thickness', 'volume')
for (feature in features) {
path = paste(
PATH_DATASETS, constant, feature, '.csv',sep = ''
)
tstat <- read.csv(file = path,
header=TRUE,
sep=",")
print(head(tstat))
print(nrow(tstat))
print(row.names(tstat))
print(tstat[['p.value']])
tstat['p_adjust'] <- p.adjust(tstat[['p.value']], method = "bonferroni", n = nrow(tstat))
pathO = paste(
PATH_OUTPUT, constant, feature, constant1, '.csv',sep = ''
)
write.csv(tstat, file= pathO,
row.names = FALSE)
}
View(tstat)
PATH_DATASETS <- "../../2.5_Data_evaluation/1_T_test/output/"
constant1 <- '_(p_adjust)'
PATH_DATASETS <- "../../2.5_Data_evaluation/1_T_test/output/"
PATH_OUTPUT <- "output/"
datasets <- list()
constant <- 'T-test_'
constant1 <- '_(p_adjust)'
features <- list('area', 'meancurv', 'thickness', 'volume')
for (feature in features) {
path = paste(
PATH_DATASETS, constant, feature, '.csv',sep = ''
)
tstat <- read.csv(file = path,
header=TRUE,
sep=",")
print(head(tstat))
print(nrow(tstat))
print(row.names(tstat))
print(tstat[['p.value']])
tstat['p_adjust'] <- p.adjust(tstat[['p.value']], method = "bonferroni", n = nrow(tstat))
pathO = paste(
PATH_OUTPUT, constant, feature, constant1, '.csv',sep = ''
)
write.csv(tstat, file= pathO,
row.names = FALSE)
}
PATH_DATASETS <- "../../1_T_test/output/"
PATH_OUTPUT <- "output/"
datasets <- list()
constant <- 'T-test_'
constant1 <- '_(p_adjust)'
features <- list('area', 'meancurv', 'thickness', 'volume')
for (feature in features) {
path = paste(
PATH_DATASETS, constant, feature, '.csv',sep = ''
)
tstat <- read.csv(file = path,
header=TRUE,
sep=",")
print(head(tstat))
print(nrow(tstat))
print(row.names(tstat))
print(tstat[['p.value']])
tstat['p_adjust'] <- p.adjust(tstat[['p.value']], method = "bonferroni", n = nrow(tstat))
pathO = paste(
PATH_OUTPUT, constant, feature, constant1, '.csv',sep = ''
)
write.csv(tstat, file= pathO,
row.names = FALSE)
}
PATH_DATASETS <- "../1_T_test/output/"
PATH_OUTPUT <- "output/"
datasets <- list()
constant <- 'T-test_'
constant1 <- '_(p_adjust)'
features <- list('area', 'meancurv', 'thickness', 'volume')
for (feature in features) {
path = paste(
PATH_DATASETS, constant, feature, '.csv',sep = ''
)
tstat <- read.csv(file = path,
header=TRUE,
sep=",")
print(head(tstat))
print(nrow(tstat))
print(row.names(tstat))
print(tstat[['p.value']])
tstat['p_adjust'] <- p.adjust(tstat[['p.value']], method = "bonferroni", n = nrow(tstat))
pathO = paste(
PATH_OUTPUT, constant, feature, constant1, '.csv',sep = ''
)
write.csv(tstat, file= pathO,
row.names = FALSE)
}
PATH_DATASETS <- "../../1_T_test/output/"
PATH_DATASETS <- "../../1_T_test/output/"
PATH_OUTPUT <- "output/"
datasets <- list()
constant <- 'T-test_'
constant1 <- '_(p_adjust)'
features <- list('area', 'meancurv', 'thickness', 'volume')
for (feature in features) {
path = paste(
PATH_DATASETS, constant, feature, '.csv',sep = ''
)
tstat <- read.csv(file = path,
header=TRUE,
sep=",")
print(head(tstat))
print(nrow(tstat))
print(row.names(tstat))
print(tstat[['p.value']])
tstat['p_adjust'] <- p.adjust(tstat[['p.value']], method = "bonferroni", n = nrow(tstat))
pathO = paste(
PATH_OUTPUT, constant, feature, constant1, '.csv',sep = ''
)
write.csv(tstat, file= pathO,
row.names = FALSE)
}
PATH_DATASETS <- "../../2.5_Data_evluation/1_T_test/output/"
PATH_OUTPUT <- "output/"
datasets <- list()
constant <- 'T-test_'
constant1 <- '_(p_adjust)'
features <- list('area', 'meancurv', 'thickness', 'volume')
for (feature in features) {
path = paste(
PATH_DATASETS, constant, feature, '.csv',sep = ''
)
tstat <- read.csv(file = path,
header=TRUE,
sep=",")
print(head(tstat))
print(nrow(tstat))
print(row.names(tstat))
print(tstat[['p.value']])
tstat['p_adjust'] <- p.adjust(tstat[['p.value']], method = "bonferroni", n = nrow(tstat))
pathO = paste(
PATH_OUTPUT, constant, feature, constant1, '.csv',sep = ''
)
write.csv(tstat, file= pathO,
row.names = FALSE)
}
PATH_DATASETS <- "/../1_T_test/output/"
PATH_OUTPUT <- "output/"
datasets <- list()
constant <- 'T-test_'
constant1 <- '_(p_adjust)'
features <- list('area', 'meancurv', 'thickness', 'volume')
for (feature in features) {
path = paste(
PATH_DATASETS, constant, feature, '.csv',sep = ''
)
tstat <- read.csv(file = path,
header=TRUE,
sep=",")
print(head(tstat))
print(nrow(tstat))
print(row.names(tstat))
print(tstat[['p.value']])
tstat['p_adjust'] <- p.adjust(tstat[['p.value']], method = "bonferroni", n = nrow(tstat))
pathO = paste(
PATH_OUTPUT, constant, feature, constant1, '.csv',sep = ''
)
write.csv(tstat, file= pathO,
row.names = FALSE)
}
PATH_DATASETS <- ""
PATH_OUTPUT <- "output/"
datasets <- list()
constant <- 'T-test_'
constant1 <- '_(p_adjust)'
features <- list('area', 'meancurv', 'thickness', 'volume')
for (feature in features) {
path = paste(
PATH_DATASETS, constant, feature, '.csv',sep = ''
)
tstat <- read.csv(file = path,
header=TRUE,
sep=",")
print(head(tstat))
print(nrow(tstat))
print(row.names(tstat))
print(tstat[['p.value']])
tstat['p_adjust'] <- p.adjust(tstat[['p.value']], method = "bonferroni", n = nrow(tstat))
pathO = paste(
PATH_OUTPUT, constant, feature, constant1, '.csv',sep = ''
)
write.csv(tstat, file= pathO,
row.names = FALSE)
}
PATH_DATASETS <- "./"
PATH_OUTPUT <- "output/"
datasets <- list()
constant <- 'T-test_'
constant1 <- '_(p_adjust)'
features <- list('area', 'meancurv', 'thickness', 'volume')
for (feature in features) {
path = paste(
PATH_DATASETS, constant, feature, '.csv',sep = ''
)
tstat <- read.csv(file = path,
header=TRUE,
sep=",")
print(head(tstat))
print(nrow(tstat))
print(row.names(tstat))
print(tstat[['p.value']])
tstat['p_adjust'] <- p.adjust(tstat[['p.value']], method = "bonferroni", n = nrow(tstat))
pathO = paste(
PATH_OUTPUT, constant, feature, constant1, '.csv',sep = ''
)
write.csv(tstat, file= pathO,
row.names = FALSE)
}
PATH_DATASETS <- "./"
PATH_OUTPUT <- "output/"
datasets <- list()
constant <- 'T-test_'
constant1 <- '_(p_adjust)'
features <- list('area', 'meancurv', 'thickness', 'volume')
for (feature in features) {
path = paste(
constant, feature, '.csv',sep = ''
)
tstat <- read.csv(file = path,
header=TRUE,
sep=",")
print(head(tstat))
print(nrow(tstat))
print(row.names(tstat))
print(tstat[['p.value']])
tstat['p_adjust'] <- p.adjust(tstat[['p.value']], method = "bonferroni", n = nrow(tstat))
pathO = paste(
PATH_OUTPUT, constant, feature, constant1, '.csv',sep = ''
)
write.csv(tstat, file= pathO,
row.names = FALSE)
}
PATH_DATASETS <- "../../2.5_Data_evaluation/1_T_test/output/"
PATH_OUTPUT <- "output/"
datasets <- list()
constant <- 'T-test_'
constant1 <- '_(p_adjust)'
features <- list('area', 'meancurv', 'thickness', 'volume')
for (feature in features) {
path = paste(
PATH_DATASETS, constant, feature, '.csv',sep = ''
)
tstat <- read.csv(file = path,
header=TRUE,
sep=",")
print(head(tstat))
print(nrow(tstat))
print(row.names(tstat))
print(tstat[['p.value']])
tstat['p_adjust'] <- p.adjust(tstat[['p.value']], method = "bonferroni", n = nrow(tstat))
pathO = paste(
PATH_OUTPUT, constant, feature, constant1, '.csv',sep = ''
)
write.csv(tstat, file= pathO,
row.names = FALSE)
}
setwd("~/repos/strongWeakPruning/2.5_Data_evaluation/2_P_value_adjusting")
PATH_DATASETS <- "../../2.5_Data_evaluation/1_T_test/output/"
PATH_OUTPUT <- "output/"
datasets <- list()
constant <- 'T-test_'
constant1 <- '_(p_adjust)'
features <- list('area', 'meancurv', 'thickness', 'volume')
for (feature in features) {
path = paste(
PATH_DATASETS, constant, feature, '.csv',sep = ''
)
tstat <- read.csv(file = path,
header=TRUE,
sep=",")
print(head(tstat))
print(nrow(tstat))
print(row.names(tstat))
print(tstat[['p.value']])
tstat['p_adjust'] <- p.adjust(tstat[['p.value']], method = "bonferroni", n = nrow(tstat))
pathO = paste(
PATH_OUTPUT, constant, feature, constant1, '.csv',sep = ''
)
write.csv(tstat, file= pathO,
row.names = FALSE)
}
